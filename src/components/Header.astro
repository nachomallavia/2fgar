---
import { common } from '../i18n';

interface NavItem {
  href: string;
  label: string;
}

const navItems: NavItem[] = [
  { href: '/', label: common.navigation.home },
  { href: '/projects', label: common.navigation.projects },
  { href: '/services', label: common.navigation.services },
  { href: '/about', label: common.navigation.about },
  { href: '/blog', label: common.navigation.blog }
];

const currentPath = Astro.url.pathname;
---

<header class="fixed w-full bg-white/90 backdrop-blur-sm z-40 border-b" transition:persist="header">
  <nav class="container mx-auto px-6 py-4">
    <div class="flex items-center justify-between">
      <a href="/" class="block">
        <img src="/logo.svg" alt="2FG Arquitectos" class="h-10 w-auto" />
      </a>
      
      <!-- Desktop Navigation -->
      <ul class="hidden md:flex space-x-8">
        {navItems.map(item => (
          <li>
            <a 
              href={item.href}
              class={`transition-colors ${
                currentPath === item.href ? 'text-black font-medium' : 'text-gray-600 hover:text-black'
              }`}
            >
              {item.label}
            </a>
          </li>
        ))}
      </ul>

      <!-- Mobile Menu Button -->
      <button
        id="mobile-menu-button"
        class="md:hidden p-2 text-gray-600 hover:text-black transition-colors"
        aria-label="Menú"
      >
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
          <path stroke-linecap="round" stroke-linejoin="round" d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5" />
        </svg>
      </button>
    </div>
  </nav>
</header>

<!-- Mobile Menu Container -->
<div class="md:hidden">
  <div
    id="mobile-menu-overlay"
    class="fixed inset-0 bg-black/50 opacity-0 pointer-events-none transition-opacity duration-300 z-50"
  >
  </div>

  <div
    id="mobile-menu"
    class="fixed inset-y-0 right-0 w-64 bg-white shadow-xl transform translate-x-full transition-transform duration-300 ease-in-out z-50"
  >
    <div class="h-full flex flex-col bg-white">
      <div class="p-6 flex-1">
        <button
          id="mobile-menu-close"
          class="absolute top-4 right-4 p-2 text-gray-600 hover:text-black transition-colors"
          aria-label="Cerrar menú"
        >
          <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
            <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
          </svg>
        </button>

        <ul class="mt-8 space-y-4">
          {navItems.map(item => (
            <li>
              <a 
                href={item.href}
                class={`block py-2 font-medium transition-colors ${
                  currentPath === item.href ? 'text-black' : 'text-gray-800 hover:text-black'
                }`}
              >
                {item.label}
              </a>
            </li>
          ))}
        </ul>
      </div>
    </div>
  </div>
</div>

<script>
  function setupMobileMenu() {
    const mobileMenu = document.getElementById('mobile-menu');
    const mobileMenuOverlay = document.getElementById('mobile-menu-overlay');
    const openButton = document.getElementById('mobile-menu-button');
    const closeButton = document.getElementById('mobile-menu-close');
    const mobileLinks = mobileMenu?.querySelectorAll('a');

    function openMenu() {
      mobileMenu?.classList.remove('translate-x-full');
      mobileMenuOverlay?.classList.remove('opacity-0', 'pointer-events-none');
      document.body.style.overflow = 'hidden';
    }

    function closeMenu() {
      mobileMenu?.classList.add('translate-x-full');
      mobileMenuOverlay?.classList.add('opacity-0', 'pointer-events-none');
      document.body.style.overflow = '';
    }

    openButton?.addEventListener('click', openMenu);
    closeButton?.addEventListener('click', closeMenu);
    mobileMenuOverlay?.addEventListener('click', closeMenu);

    mobileLinks?.forEach(link => {
      link.addEventListener('click', closeMenu);
    });
  }

  document.addEventListener('astro:page-load', setupMobileMenu);
</script>